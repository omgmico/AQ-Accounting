# =======================
# AQ Accounting - Performance Optimization
# =======================

# Enable Gzip/Brotli Compression for Text-based Files
<IfModule mod_deflate.c>
    # Enable compression for HTML, CSS, JavaScript, JSON, XML, and Text files
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE text/javascript
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
    AddOutputFilterByType DEFLATE application/json
    AddOutputFilterByType DEFLATE application/ld+json
    AddOutputFilterByType DEFLATE application/x-font-ttf
    AddOutputFilterByType DEFLATE font/opentype
    AddOutputFilterByType DEFLATE image/svg+xml
    
    # Remove browser bugs (only needed for very old IE)
    BrowserMatch ^Mozilla/4 gzip-only-text/html
    BrowserMatch ^Mozilla/4\.0[678] no-gzip
    BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
    Header append Vary User-Agent
</IfModule>

# Enable Brotli Compression (if available)
<IfModule mod_brotli.c>
    AddOutputFilterByType BROTLI_COMPRESS text/plain
    AddOutputFilterByType BROTLI_COMPRESS text/html
    AddOutputFilterByType BROTLI_COMPRESS text/xml
    AddOutputFilterByType BROTLI_COMPRESS text/css
    AddOutputFilterByType BROTLI_COMPRESS text/javascript
    AddOutputFilterByType BROTLI_COMPRESS application/xml
    AddOutputFilterByType BROTLI_COMPRESS application/xhtml+xml
    AddOutputFilterByType BROTLI_COMPRESS application/rss+xml
    AddOutputFilterByType BROTLI_COMPRESS application/javascript
    AddOutputFilterByType BROTLI_COMPRESS application/x-javascript
    AddOutputFilterByType BROTLI_COMPRESS application/json
    AddOutputFilterByType BROTLI_COMPRESS application/ld+json
    AddOutputFilterByType BROTLI_COMPRESS image/svg+xml
</IfModule>

# =======================
# Browser Caching (Leverage Browser Cache)
# =======================

<IfModule mod_expires.c>
    ExpiresActive on
    
    # CSS, JavaScript
    ExpiresByType text/css "access plus 1 year"
    ExpiresByType application/javascript "access plus 1 year"
    ExpiresByType text/javascript "access plus 1 year"
    
    # Images
    ExpiresByType image/jpg "access plus 1 year"
    ExpiresByType image/jpeg "access plus 1 year"
    ExpiresByType image/gif "access plus 1 year"
    ExpiresByType image/png "access plus 1 year"
    ExpiresByType image/webp "access plus 1 year"
    ExpiresByType image/svg+xml "access plus 1 year"
    ExpiresByType image/x-icon "access plus 1 year"
    
    # Fonts
    ExpiresByType application/x-font-ttf "access plus 1 year"
    ExpiresByType font/opentype "access plus 1 year"
    ExpiresByType application/x-font-woff "access plus 1 year"
    ExpiresByType application/font-woff2 "access plus 1 year"
    
    # JSON, XML
    ExpiresByType application/json "access plus 1 day"
    ExpiresByType application/xml "access plus 1 day"
    ExpiresByType text/xml "access plus 1 day"
    
    # HTML
    ExpiresByType text/html "access plus 1 hour"
</IfModule>

# =======================
# Cache-Control Headers
# =======================

<IfModule mod_headers.c>
    # CSS, JavaScript - Cache for 1 year
    <FilesMatch "\.(css|js)$">
        Header set Cache-Control "public, max-age=31536000, immutable"
    </FilesMatch>
    
    # Images - Cache for 1 year
    <FilesMatch "\.(jpg|jpeg|png|gif|webp|svg|ico)$">
        Header set Cache-Control "public, max-age=31536000, immutable"
    </FilesMatch>
    
    # Fonts - Cache for 1 year
    <FilesMatch "\.(ttf|otf|woff|woff2|eot)$">
        Header set Cache-Control "public, max-age=31536000, immutable"
    </FilesMatch>
    
    # HTML - Cache for 1 hour
    <FilesMatch "\.html$">
        Header set Cache-Control "public, max-age=3600"
    </FilesMatch>
    
    # JSON - Cache for 1 day
    <FilesMatch "\.json$">
        Header set Cache-Control "public, max-age=86400"
    </FilesMatch>
    
    # Remove ETags (not needed with proper Cache-Control)
    Header unset ETag
    FileETag None
    
    # Security headers for better lighthouse score
    Header always set X-Content-Type-Options nosniff
    Header always set X-Frame-Options DENY
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    
    # Add Vary header for better caching
    Header append Vary Accept-Encoding
</IfModule>

# =======================
# WebP Image Support
# =======================

<IfModule mod_rewrite.c>
    RewriteEngine On
    
    # Serve WebP images if supported and available
    RewriteCond %{HTTP_ACCEPT} image/webp
    RewriteCond %{REQUEST_FILENAME} \.(jpe?g|png)$
    RewriteCond %{REQUEST_FILENAME}.webp -f
    RewriteRule ^(.+)\.(jpe?g|png)$ $1.$2.webp [T=image/webp,E=accept:1]
</IfModule>

# Set WebP MIME type
<IfModule mod_mime.c>
    AddType image/webp .webp
</IfModule>

# =======================
# Security & Performance
# =======================

# Prevent access to .htaccess and other sensitive files
<Files ~ "^\.">
    Order allow,deny
    Deny from all
</Files>

# Disable server signature
ServerSignature Off

# Force UTF-8 encoding
AddDefaultCharset UTF-8

# =======================
# Lighthouse Optimizations
# =======================

# Enable Keep-Alive for better performance
<IfModule mod_headers.c>
    Header set Connection keep-alive
</IfModule>

# Prevent MIME type sniffing
<IfModule mod_headers.c>
    Header set X-Content-Type-Options nosniff
</IfModule>
